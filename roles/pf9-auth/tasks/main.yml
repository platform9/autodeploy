---

# Ensure required Keystone variables exist
- fail: msg="variable undefined - du_url"
  when: du_url is undefined
- fail: msg="variable undefined - os_username"
  when: os_username is undefined
- fail: msg="variable undefined - os_password"
  when: os_password is undefined
- fail: msg="variable undefined - os_region"
  when: os_region is undefined
- fail: msg="variable undefined - os_tenant"
  when: os_tenant is undefined

- name: Create local files/ directory
  connection: local
  become: no
  file:
    state: directory
    path: files/

- name: Check if cached Keystone token exists
  stat:
    path: files/keystone-token.txt
  register: cached_token

- block:
    - name: Load OS_AUTH_TOKEN into fact
      set_fact: "os_auth_token={{ lookup('file', 'files/keystone-token.txt') | trim }}"

    - name: Validate Keystone token
      uri:
        url: "{{ du_url }}/keystone/v2.0"
        headers:
          X-Auth-Token: "{{ os_auth_token }}"
        status_code: 200, 401
        validate_certs: no
      register: validate_response
  when: cached_token.stat.exists == True

- debug: var=du_url
- debug: var=os_username
- debug: var=os_password
- debug: var=os_region
- debug: var=os_tenant

- block:
    - name: Set OS_AUTH fact
      set_fact:
        os_auth:
          auth_url: "{{du_url}}/keystone/v2.0"
          username: "{{os_username}}"
          password: "{{os_password}}"
          project_name: "{{os_tenant}}"

    - name: Obtain authentication token from Keystone
      become: no
      local_action: "os_auth auth={{ os_auth }} region_name={{ os_tenant }}"
      check_mode: no
      register: auth_reply
      ignore_errors: true
    - debug: var=auth_reply

    - name: Save OS Auth Token
      connection: local
      become: no
      copy:
        content: "{{ auth_reply.ansible_facts.auth_token }}"
        dest: files/keystone-token.txt

    - name: Store OS_AUTH_TOKEN in fact
      set_fact: "os_auth_token={{ auth_reply.ansible_facts.auth_token }}"

  when: (cached_token.stat.exists == False) or
        (validate_response is defined and validate_response.status != 200)
