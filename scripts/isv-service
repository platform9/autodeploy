#!/bin/bash

target_service=""
services="setupd-pf9-forwarder.service setupd-pf9-keystone.service setupd-pf9-nginx.service setupd-pf9-qbert.service \
          setupd-pf9-rabbitmq.service setupd-pf9-resmgr.service setupd-pf9-sidekickserver.service setupd-pf9-switcher.service"

usage() {
  echo -e "usage: `basename $0` start|stop|restart|status [<service-name>]\n"
  exit 1
}

banner() {
  echo "---------------------------------------- --------------------"
  echo "Service Name                             Status"
  echo "---------------------------------------- --------------------"
}

# validate commandline arguments
if [ $# -lt 1 ]; then usage; fi
op=${1}

# validate op
case ${op} in
start|stop|restart)
  ;;
status)
  if [ $# -eq 2 ]; then
    target_service=${2}
    echo ${services} | grep ${target_service} > /dev/null 2>&1
    if [ $? -ne 0 ]; then
      echo "invalid service-name: ${target_service}"; exit 1
    fi
  fi
  ;;
*)
  usage ;;
esac

_start() {
  local sleeptime=2

  echo "STATRING SERVICES"
  banner
  for service in ${services}; do
    printf "%-40s " "${service}"

    # check if service is already running
    systemctl is-active ${service} > /dev/null 2>&1
    if [ $? -eq 0 ]; then
      printf "%-20s\n" "Already Running"
      continue
    fi

    # start service
    systemctl start ${service} > /dev/null 2>&1
    if [ $? -eq 0 ]; then
      printf "%-20s\n" "Started"
    else
      printf "%-20s\n" "Startup Failed"
    fi
    sleep ${sleeptime}
  done
}

_stop() {
  echo "STOPPING SERVICES"
  banner
  for service in ${services}; do
    printf "%-40s " "${service}"

    # check if service is running
    systemctl is-active ${service} > /dev/null 2>&1
    if [ $? -ne 0 ]; then
      printf "%-20s\n" "Not Running"
      continue
    fi

    # stop service
    systemctl stop ${service} > /dev/null 2>&1
    if [ $? -eq 0 ]; then
      printf "%-20s\n" "Stopped"
    else
      printf "%-20s\n" "Shutdown Failed"
    fi
  done
}

_status() {
  banner
  for service in ${services}; do
    if [ -n "${target_service}" -a "${target_service}" != "${service}" ]; then continue; fi
    systemctl is-active ${service} > /dev/null 2>&1
    if [ $? -eq 0 ]; then
      printf "%-40s %-20s\n" "${service}" "Active"
    else
      printf "%-40s %-20s\n" "${service}" "Not Running"
    fi
  done

  if [ -n "${target_service}" ]; then
    echo
    systemctl status ${target_service}
  fi
}

# execute op
if [ "${op}" == "start" ]; then
  _start
elif [ "${op}" == "stop" ]; then
  _stop
elif [ "${op}" == "status" ]; then
  _status
elif [ "${op}" == "restart" ]; then
  _stop
  _start
fi

# exit cleanly
exit 0
